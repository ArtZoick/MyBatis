<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zoick.dao.IUserDao">

    <!--配置查询结果的列名和实体类的属性名的对应关系-->
    <resultMap id="userMap" type="top.zoick.domain.User">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>


    <!--抽取重复的sql语句-->
    <sql id="defaultUser">
        select * from user
    </sql>


    <!--配置查询所有  其中id不能乱写必须是dao接口中的方法  resultType写的是实体类的全路径-->
    <select id="findAll" resultMap="userMap">
        <include refid="defaultUser"/>
    </select>

    <!--根据id查询用户-->
    <select id="findByID" parameterType="INT" resultMap="userMap">
        select * from user where id = #{uuuuuuid}
    </select>

    <!--根据名称模糊查询-->
    <select id="findByName" parameterType="String" resultMap="userMap">
        select * from user where username like #{namenamenamename}
        <!--select * from user where username like '%${value}%'-->
    </select>


    <!--根据QueryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="top.zoick.domain.QueryVo" resultMap="userMap">
        select * from user where username like #{user.userName}
    </select>

    <!--根据条件查询-->
    <select id="findByCondition" resultMap="userMap" parameterType="user">
        <!--
        select * from user where 1=1
        <if test="userName != null">
            and username = #{userName}
        </if>
        <if test="userSex != null">
            and sex = #{userSex}
        </if>
        -->
        <!--where标签-->
        select * from user
        <where>
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>
    </select>

    <!--根据queryvo中Id集合实现查询用户列表-->
    <select id="findUserInIds" resultMap="userMap" parameterType="queryvo">
        select * from user
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="uuuuid" separator=",">
                    #{uuuuid}
                </foreach>
            </if>
        </where>
    </select>

</mapper>